package main

import (
	"os"
	"strings"
)

const head = `// Code generated by codegen/patchopenapiof. DO NOT EDIT.

package nano

import (
	"io"

	"github.com/pkg/errors"
)
`

const template = `
func (bot *Bot) patchOpenAPIof[T any](ep string, body io.Reader) (*[T any], error) {
	resp := &struct {
		CodeMessageBase
		[T any]
	}{}
	err := bot.PatchOpenAPI(ep, "", resp, body)
	if err != nil {
		err = errors.Wrap(err, getCallerFuncName())
	}
	return &resp.[T any], err
}
`

func main() {
	f, err := os.Create("openapi_codegen_patchopenapiof.go")
	if err != nil {
		panic(err)
	}
	defer f.Close()
	_, err = f.WriteString(head)
	if err != nil {
		panic(err)
	}
	for _, name := range os.Args[1:] {
		_, err = f.WriteString(strings.ReplaceAll(template, "[T any]", name))
		if err != nil {
			panic(err)
		}
	}
}
