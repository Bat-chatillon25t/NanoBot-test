// Code generated by codegen/engine. DO NOT EDIT.

package nano

// OnMessage ...
func (e *Engine) OnMessage(rules ...Rule) *Matcher { return e.On("Message", rules...) }

// OnMessage ...
func OnMessage(rules ...Rule) *Matcher { return On("Message", rules...) }

// OnGuildCreate ...
func (e *Engine) OnGuildCreate(rules ...Rule) *Matcher { return e.On("GuildCreate", rules...) }

// OnGuildCreate ...
func OnGuildCreate(rules ...Rule) *Matcher { return On("GuildCreate", rules...) }

// OnGuildUpdate ...
func (e *Engine) OnGuildUpdate(rules ...Rule) *Matcher { return e.On("GuildUpdate", rules...) }

// OnGuildUpdate ...
func OnGuildUpdate(rules ...Rule) *Matcher { return On("GuildUpdate", rules...) }

// OnGuildDelete ...
func (e *Engine) OnGuildDelete(rules ...Rule) *Matcher { return e.On("GuildDelete", rules...) }

// OnGuildDelete ...
func OnGuildDelete(rules ...Rule) *Matcher { return On("GuildDelete", rules...) }

// OnChannelCreate ...
func (e *Engine) OnChannelCreate(rules ...Rule) *Matcher { return e.On("ChannelCreate", rules...) }

// OnChannelCreate ...
func OnChannelCreate(rules ...Rule) *Matcher { return On("ChannelCreate", rules...) }

// OnChannelUpdate ...
func (e *Engine) OnChannelUpdate(rules ...Rule) *Matcher { return e.On("ChannelUpdate", rules...) }

// OnChannelUpdate ...
func OnChannelUpdate(rules ...Rule) *Matcher { return On("ChannelUpdate", rules...) }

// OnChannelDelete ...
func (e *Engine) OnChannelDelete(rules ...Rule) *Matcher { return e.On("ChannelDelete", rules...) }

// OnChannelDelete ...
func OnChannelDelete(rules ...Rule) *Matcher { return On("ChannelDelete", rules...) }

// OnGuildMemberAdd ...
func (e *Engine) OnGuildMemberAdd(rules ...Rule) *Matcher { return e.On("GuildMemberAdd", rules...) }

// OnGuildMemberAdd ...
func OnGuildMemberAdd(rules ...Rule) *Matcher { return On("GuildMemberAdd", rules...) }

// OnGuildMemberUpdate ...
func (e *Engine) OnGuildMemberUpdate(rules ...Rule) *Matcher { return e.On("GuildMemberUpdate", rules...) }

// OnGuildMemberUpdate ...
func OnGuildMemberUpdate(rules ...Rule) *Matcher { return On("GuildMemberUpdate", rules...) }

// OnGuildMemberRemove ...
func (e *Engine) OnGuildMemberRemove(rules ...Rule) *Matcher { return e.On("GuildMemberRemove", rules...) }

// OnGuildMemberRemove ...
func OnGuildMemberRemove(rules ...Rule) *Matcher { return On("GuildMemberRemove", rules...) }

// OnMessageCreate ...
func (e *Engine) OnMessageCreate(rules ...Rule) *Matcher { return e.On("MessageCreate", rules...) }

// OnMessageCreate ...
func OnMessageCreate(rules ...Rule) *Matcher { return On("MessageCreate", rules...) }

// OnMessageDelete ...
func (e *Engine) OnMessageDelete(rules ...Rule) *Matcher { return e.On("MessageDelete", rules...) }

// OnMessageDelete ...
func OnMessageDelete(rules ...Rule) *Matcher { return On("MessageDelete", rules...) }

// OnMessageReactionAdd ...
func (e *Engine) OnMessageReactionAdd(rules ...Rule) *Matcher { return e.On("MessageReactionAdd", rules...) }

// OnMessageReactionAdd ...
func OnMessageReactionAdd(rules ...Rule) *Matcher { return On("MessageReactionAdd", rules...) }

// OnMessageReactionRemove ...
func (e *Engine) OnMessageReactionRemove(rules ...Rule) *Matcher { return e.On("MessageReactionRemove", rules...) }

// OnMessageReactionRemove ...
func OnMessageReactionRemove(rules ...Rule) *Matcher { return On("MessageReactionRemove", rules...) }

// OnDirectMessageCreate ...
func (e *Engine) OnDirectMessageCreate(rules ...Rule) *Matcher { return e.On("DirectMessageCreate", rules...) }

// OnDirectMessageCreate ...
func OnDirectMessageCreate(rules ...Rule) *Matcher { return On("DirectMessageCreate", rules...) }

// OnDirectMessageDelete ...
func (e *Engine) OnDirectMessageDelete(rules ...Rule) *Matcher { return e.On("DirectMessageDelete", rules...) }

// OnDirectMessageDelete ...
func OnDirectMessageDelete(rules ...Rule) *Matcher { return On("DirectMessageDelete", rules...) }

// OnOpenForumThreadCreate ...
func (e *Engine) OnOpenForumThreadCreate(rules ...Rule) *Matcher { return e.On("OpenForumThreadCreate", rules...) }

// OnOpenForumThreadCreate ...
func OnOpenForumThreadCreate(rules ...Rule) *Matcher { return On("OpenForumThreadCreate", rules...) }

// OnOpenForumThreadUpdate ...
func (e *Engine) OnOpenForumThreadUpdate(rules ...Rule) *Matcher { return e.On("OpenForumThreadUpdate", rules...) }

// OnOpenForumThreadUpdate ...
func OnOpenForumThreadUpdate(rules ...Rule) *Matcher { return On("OpenForumThreadUpdate", rules...) }

// OnOpenForumThreadDelete ...
func (e *Engine) OnOpenForumThreadDelete(rules ...Rule) *Matcher { return e.On("OpenForumThreadDelete", rules...) }

// OnOpenForumThreadDelete ...
func OnOpenForumThreadDelete(rules ...Rule) *Matcher { return On("OpenForumThreadDelete", rules...) }

// OnOpenForumPostCreate ...
func (e *Engine) OnOpenForumPostCreate(rules ...Rule) *Matcher { return e.On("OpenForumPostCreate", rules...) }

// OnOpenForumPostCreate ...
func OnOpenForumPostCreate(rules ...Rule) *Matcher { return On("OpenForumPostCreate", rules...) }

// OnOpenForumPostDelete ...
func (e *Engine) OnOpenForumPostDelete(rules ...Rule) *Matcher { return e.On("OpenForumPostDelete", rules...) }

// OnOpenForumPostDelete ...
func OnOpenForumPostDelete(rules ...Rule) *Matcher { return On("OpenForumPostDelete", rules...) }

// OnOpenForumReplyCreate ...
func (e *Engine) OnOpenForumReplyCreate(rules ...Rule) *Matcher { return e.On("OpenForumReplyCreate", rules...) }

// OnOpenForumReplyCreate ...
func OnOpenForumReplyCreate(rules ...Rule) *Matcher { return On("OpenForumReplyCreate", rules...) }

// OnOpenForumReplyDelete ...
func (e *Engine) OnOpenForumReplyDelete(rules ...Rule) *Matcher { return e.On("OpenForumReplyDelete", rules...) }

// OnOpenForumReplyDelete ...
func OnOpenForumReplyDelete(rules ...Rule) *Matcher { return On("OpenForumReplyDelete", rules...) }

// OnAudioOrLiveChannelMemberEnter ...
func (e *Engine) OnAudioOrLiveChannelMemberEnter(rules ...Rule) *Matcher { return e.On("AudioOrLiveChannelMemberEnter", rules...) }

// OnAudioOrLiveChannelMemberEnter ...
func OnAudioOrLiveChannelMemberEnter(rules ...Rule) *Matcher { return On("AudioOrLiveChannelMemberEnter", rules...) }

// OnAudioOrLiveChannelMemberExit ...
func (e *Engine) OnAudioOrLiveChannelMemberExit(rules ...Rule) *Matcher { return e.On("AudioOrLiveChannelMemberExit", rules...) }

// OnAudioOrLiveChannelMemberExit ...
func OnAudioOrLiveChannelMemberExit(rules ...Rule) *Matcher { return On("AudioOrLiveChannelMemberExit", rules...) }

// OnMessageAuditPass ...
func (e *Engine) OnMessageAuditPass(rules ...Rule) *Matcher { return e.On("MessageAuditPass", rules...) }

// OnMessageAuditPass ...
func OnMessageAuditPass(rules ...Rule) *Matcher { return On("MessageAuditPass", rules...) }

// OnMessageAuditReject ...
func (e *Engine) OnMessageAuditReject(rules ...Rule) *Matcher { return e.On("MessageAuditReject", rules...) }

// OnMessageAuditReject ...
func OnMessageAuditReject(rules ...Rule) *Matcher { return On("MessageAuditReject", rules...) }

// OnForumThreadCreate ...
func (e *Engine) OnForumThreadCreate(rules ...Rule) *Matcher { return e.On("ForumThreadCreate", rules...) }

// OnForumThreadCreate ...
func OnForumThreadCreate(rules ...Rule) *Matcher { return On("ForumThreadCreate", rules...) }

// OnForumThreadUpdate ...
func (e *Engine) OnForumThreadUpdate(rules ...Rule) *Matcher { return e.On("ForumThreadUpdate", rules...) }

// OnForumThreadUpdate ...
func OnForumThreadUpdate(rules ...Rule) *Matcher { return On("ForumThreadUpdate", rules...) }

// OnForumThreadDelete ...
func (e *Engine) OnForumThreadDelete(rules ...Rule) *Matcher { return e.On("ForumThreadDelete", rules...) }

// OnForumThreadDelete ...
func OnForumThreadDelete(rules ...Rule) *Matcher { return On("ForumThreadDelete", rules...) }

// OnForumPostCreate ...
func (e *Engine) OnForumPostCreate(rules ...Rule) *Matcher { return e.On("ForumPostCreate", rules...) }

// OnForumPostCreate ...
func OnForumPostCreate(rules ...Rule) *Matcher { return On("ForumPostCreate", rules...) }

// OnForumPostDelete ...
func (e *Engine) OnForumPostDelete(rules ...Rule) *Matcher { return e.On("ForumPostDelete", rules...) }

// OnForumPostDelete ...
func OnForumPostDelete(rules ...Rule) *Matcher { return On("ForumPostDelete", rules...) }

// OnForumReplyCreate ...
func (e *Engine) OnForumReplyCreate(rules ...Rule) *Matcher { return e.On("ForumReplyCreate", rules...) }

// OnForumReplyCreate ...
func OnForumReplyCreate(rules ...Rule) *Matcher { return On("ForumReplyCreate", rules...) }

// OnForumReplyDelete ...
func (e *Engine) OnForumReplyDelete(rules ...Rule) *Matcher { return e.On("ForumReplyDelete", rules...) }

// OnForumReplyDelete ...
func OnForumReplyDelete(rules ...Rule) *Matcher { return On("ForumReplyDelete", rules...) }

// OnForumPublishAuditResult ...
func (e *Engine) OnForumPublishAuditResult(rules ...Rule) *Matcher { return e.On("ForumPublishAuditResult", rules...) }

// OnForumPublishAuditResult ...
func OnForumPublishAuditResult(rules ...Rule) *Matcher { return On("ForumPublishAuditResult", rules...) }

// OnAudioStart ...
func (e *Engine) OnAudioStart(rules ...Rule) *Matcher { return e.On("AudioStart", rules...) }

// OnAudioStart ...
func OnAudioStart(rules ...Rule) *Matcher { return On("AudioStart", rules...) }

// OnAudioFinish ...
func (e *Engine) OnAudioFinish(rules ...Rule) *Matcher { return e.On("AudioFinish", rules...) }

// OnAudioFinish ...
func OnAudioFinish(rules ...Rule) *Matcher { return On("AudioFinish", rules...) }

// OnAudioOnMic ...
func (e *Engine) OnAudioOnMic(rules ...Rule) *Matcher { return e.On("AudioOnMic", rules...) }

// OnAudioOnMic ...
func OnAudioOnMic(rules ...Rule) *Matcher { return On("AudioOnMic", rules...) }

// OnAudioOffMic ...
func (e *Engine) OnAudioOffMic(rules ...Rule) *Matcher { return e.On("AudioOffMic", rules...) }

// OnAudioOffMic ...
func OnAudioOffMic(rules ...Rule) *Matcher { return On("AudioOffMic", rules...) }

// OnAtMessageCreate ...
func (e *Engine) OnAtMessageCreate(rules ...Rule) *Matcher { return e.On("AtMessageCreate", rules...) }

// OnAtMessageCreate ...
func OnAtMessageCreate(rules ...Rule) *Matcher { return On("AtMessageCreate", rules...) }

// OnPublicMessageDelete ...
func (e *Engine) OnPublicMessageDelete(rules ...Rule) *Matcher { return e.On("PublicMessageDelete", rules...) }

// OnPublicMessageDelete ...
func OnPublicMessageDelete(rules ...Rule) *Matcher { return On("PublicMessageDelete", rules...) }

// OnMessageKeyword ...
func OnMessageKeyword(keyword string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageKeyword(keyword, rules...)
}

// OnMessageKeyword ...
func (e *Engine) OnMessageKeyword(keyword string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{KeywordRule(keyword)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageCommandGroup ...
func OnMessageCommandGroup(commands []string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageCommandGroup(commands, rules...)
}

// OnMessageCommandGroup ...
func (e *Engine) OnMessageCommandGroup(commands []string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{CommandGroupRule(commands...)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageSuffixGroup ...
func OnMessageSuffixGroup(suffix []string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageSuffixGroup(suffix, rules...)
}

// OnMessageSuffixGroup ...
func (e *Engine) OnMessageSuffixGroup(suffix []string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{SuffixGroupRule(suffix...)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessagePrefix ...
func OnMessagePrefix(prefix string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessagePrefix(prefix, rules...)
}

// OnMessagePrefix ...
func (e *Engine) OnMessagePrefix(prefix string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{PrefixRule(prefix)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageRegex ...
func OnMessageRegex(regexPattern string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageRegex(regexPattern, rules...)
}

// OnMessageRegex ...
func (e *Engine) OnMessageRegex(regexPattern string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{RegexRule(regexPattern)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageFullMatch ...
func OnMessageFullMatch(src string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageFullMatch(src, rules...)
}

// OnMessageFullMatch ...
func (e *Engine) OnMessageFullMatch(src string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{FullMatchRule(src)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageFullMatchGroup ...
func OnMessageFullMatchGroup(src []string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageFullMatchGroup(src, rules...)
}

// OnMessageFullMatchGroup ...
func (e *Engine) OnMessageFullMatchGroup(src []string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{FullMatchGroupRule(src...)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageKeywordGroup ...
func OnMessageKeywordGroup(keywords []string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageKeywordGroup(keywords, rules...)
}

// OnMessageKeywordGroup ...
func (e *Engine) OnMessageKeywordGroup(keywords []string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{KeywordGroupRule(keywords...)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessagePrefixGroup ...
func OnMessagePrefixGroup(prefix []string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessagePrefixGroup(prefix, rules...)
}

// OnMessagePrefixGroup ...
func (e *Engine) OnMessagePrefixGroup(prefix []string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{PrefixGroupRule(prefix...)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageSuffix ...
func OnMessageSuffix(suffix string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageSuffix(suffix, rules...)
}

// OnMessageSuffix ...
func (e *Engine) OnMessageSuffix(suffix string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{SuffixRule(suffix)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageCommand ...
func OnMessageCommand(commands string, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageCommand(commands, rules...)
}

// OnMessageCommand ...
func (e *Engine) OnMessageCommand(commands string, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{CommandRule(commands)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}

// OnMessageShell shell命令触发器
func OnMessageShell(command string, model interface{}, rules ...Rule) *Matcher {
	return defaultEngine.OnMessageShell(command, model, rules...)
}

// OnMessageShell shell命令触发器
func (e *Engine) OnMessageShell(command string, model interface{}, rules ...Rule) *Matcher {
	matcher := &Matcher{
		Type:   "Message",
		Rules:  append([]Rule{ShellRule(command, model)}, rules...),
		Engine: e,
	}
	e.matchers = append(e.matchers, matcher)
	return StoreMatcher(matcher)
}
